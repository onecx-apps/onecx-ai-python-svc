openapi: 3.0.0
info:
  title: ChatBotRestApi
  version: 1.0.1
servers:
  - url: "http://onecx-ai-svc:8080"  
tags:
  - name: aiChat
paths:
  /chat:
    post:
      tags:
        - aiChat
      operationId: chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chatMessage:
                  $ref: '#/components/schemas/ChatMessage'
                conversation:
                  $ref: '#/components/schemas/Conversation'
              required:
                - chatMessage
              additionalProperties: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
  /conversation/{conversationId}:
    get:
      tags:
        - aiChat      
      operationId: getConversation
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
        '404':
          description: Not Found
          content:
            application/json:
              example:
                error: "Conversation not found"                
  /startConversation:
    post:
      tags:
        - aiChat      
      operationId: startConversation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conversation_type:
                  type: string
              required:
                - conversation_type
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
  /uploadDocuments/{conversationId}:
    post:
      tags:
        - aiChat      
      operationId: uploadDocuments
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Document'
      responses:
        '200':
          description: Successful response
components:
  schemas:
    ChatMessage:
      type: object
      properties:
        conversationId:
          type: string
        correlationId:
          type: string
        message:
          type: string
          maxLength: 10000
        type:
          type: string
          enum: [ASSISTANT, SYSTEM, USER, ACTION]
        creationDate:
          type: integer
          format: int64
        reliability:
          type: float
    Conversation:
      type: object
      properties:
        conversationId:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
        conversationType:
          type: string
          enum: [CHANNELING, Q_AND_A]
    Document:
      type: object
      properties:
        content:
          type: string
          format: byte
          description: Base64 encoded document content